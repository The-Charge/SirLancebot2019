// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc2619.SirLancebot2016.subsystems;

import org.usfirst.frc2619.TheChargeDashboard;
import org.usfirst.frc2619.SirLancebot2016.RobotMap;
import org.usfirst.frc2619.SirLancebot2016.commands.*;
import com.ctre.phoenix.motorcontrol.can.TalonSRX;
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;

import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

/**
 *
 */
public class Collector extends Subsystem {

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final WPI_TalonSRX feedRoller = RobotMap.collectorfeedRoller;
    private final WPI_TalonSRX centerRoller = RobotMap.collectorcenterRoller;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	public static final double FORWARD_SPEED_FEED = .8;
	public static final double FORWARD_SPEED_CENTER = .8;
	public static final double REVERSE_SPEED_FEED = -.6;
	public static final double REVERSE_SPEED_CENTER = -.6;

	public double forwardSpeedFeed = FORWARD_SPEED_FEED;
	public double forwardSpeedCenter = FORWARD_SPEED_CENTER;
	public double reverseSpeedFeed = REVERSE_SPEED_FEED;
	public double reverseSpeedCenter = REVERSE_SPEED_CENTER;

	public boolean feedRollerOn = false;
	public boolean feedRollerForward = false;

	// Put methods for controlling this subsystem
	// here. Call these from Commands.

	public void initDefaultCommand() {
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new CollectorControl());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

		// Set the default command for a subsystem here.
		// setDefaultCommand(new MySpecialCommand());
		writeDashboardDefaultValues();
	}

	public void writeDashboardDefaultValues() {
		TheChargeDashboard.putNumber("Feed Roller Forward Speed",
				FORWARD_SPEED_FEED);
		TheChargeDashboard.putNumber("Feed Roller Reverse Speed",
				REVERSE_SPEED_FEED);
		TheChargeDashboard.putNumber("Center Roller Forward Speed",
				FORWARD_SPEED_CENTER);
		TheChargeDashboard.putNumber("Center Roller Reverse Speed",
				REVERSE_SPEED_CENTER);
	}

	public void readDashboardValues() {
		forwardSpeedFeed = SmartDashboard
				.getNumber("Feed Roller Forward Speed", 0);
		forwardSpeedCenter = SmartDashboard
				.getNumber("Center Roller Forward Speed", 0);
		reverseSpeedFeed = SmartDashboard
				.getNumber("Feed Roller Reverse Speed", 0);
		reverseSpeedCenter = SmartDashboard
				.getNumber("Center Roller Reverse Speed", 0);
	}

	public void writeDashboardDebugValues() {
		TheChargeDashboard.putNumber("Feed Roller Forward Speed",
				forwardSpeedFeed);
		TheChargeDashboard.putNumber("Feed Roller Reverse Speed",
				reverseSpeedFeed);
		TheChargeDashboard.putNumber("Center Roller Forward Speed",
				forwardSpeedCenter);
		TheChargeDashboard.putNumber("Center Roller Reverse Speed",
				reverseSpeedCenter);
	}

	public void run() {
		writeDashboardDebugValues();
		if (feedRollerOn && feedRollerForward)
			forwardRollers();
		else if (feedRollerOn && !feedRollerForward)
			reverseRollers();
		else
			stopRollers();
	}

	public void stopRollers() {
		feedRoller.set(0);
		centerRoller.set(0);
	}

	public void forwardRollers() {
		feedRoller.set(forwardSpeedFeed);
		centerRoller.set(-forwardSpeedCenter);
	}

	public void reverseRollers() {
		feedRoller.set(reverseSpeedFeed);
		centerRoller.set(-reverseSpeedCenter);
	}

}
